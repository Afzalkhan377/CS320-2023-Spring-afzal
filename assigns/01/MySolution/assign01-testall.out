{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 (base) afzalkhan@crc-dot1x-nat-10-239-64-46 Testing % sml <assign01-01-test.sml\
Standard ML of New Jersey (64-bit) v110.99.3 [built: Thu Jul 28 00:35:16 2022]\
- [opening ./../../../mysmlib/mysmlib-cls.sml]\
[autoloading]\
[library $SMLNJ-BASIS/basis.cm is stable]\
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]\
[autoloading done]\
type 'a optn = 'a option\
exception ERROR320 of string optn\
exception ConsMatch320\
exception OptnSubscript320\
exception ListSubscript320\
val assert320 = fn : bool -> unit\
val assert320_some = fn : bool * string -> unit\
val char_of_digit = fn : int -> char\
val print_int = fn : int -> unit\
val print_char = fn : char -> unit\
val list_is_nil = fn : 'a list -> bool\
val list_is_cons = fn : 'a list -> bool\
val list_unnil = fn : 'a list -> unit\
val list_uncons = fn : 'a list -> 'a * 'a list\
val optn_is_none = fn : 'a optn -> bool\
val optn_is_some = fn : 'a optn -> bool\
val optn_unnone = fn : 'a optn -> unit\
val optn_unsome = fn : 'a optn -> 'a\
val it = () : unit\
[opening ./../MySolution/assign01-01.sml]\
[opening ./../assign01-lib.sml]\
[autoloading]\
[autoloading done]\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
val it = () : unit\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
exception XlistConsMatch\
exception XlistSubscript\
datatype 'a xlist\
  = xlist_append of 'a xlist * 'a xlist\
  | xlist_cons of 'a * 'a xlist\
  | xlist_nil\
  | xlist_reverse of 'a xlist\
  | xlist_snoc of 'a xlist * 'a\
val list_of_xlist = fn : 'a xlist -> 'a list\
val helper = fn : 'a xlist * int -> int\
val xlist_size = fn : 'a xlist -> int\
val it = () : unit\
= Assign01-01-test passed!\
val list_size = fn : 'a list -> int\
val xs = <hidden> : 'a xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs =\
  xlist_append\
    (xlist_reverse\
       (xlist_snoc\
          (xlist_cons (1,xlist_append (xlist_reverse #,xlist_reverse #)),2)),\
     xlist_reverse\
       (xlist_snoc\
          (xlist_cons (1,xlist_append (xlist_reverse #,xlist_reverse #)),2)))\
  : int xlist\
\
(base) afzalkhan@crc-dot1x-nat-10-239-64-46 Testing % sml <assign01-02-test.sml\
Standard ML of New Jersey (64-bit) v110.99.3 [built: Thu Jul 28 00:35:16 2022]\
- [opening ./../../../mysmlib/mysmlib-cls.sml]\
[autoloading]\
[library $SMLNJ-BASIS/basis.cm is stable]\
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]\
[autoloading done]\
type 'a optn = 'a option\
exception ERROR320 of string optn\
exception ConsMatch320\
exception OptnSubscript320\
exception ListSubscript320\
val assert320 = fn : bool -> unit\
val assert320_some = fn : bool * string -> unit\
val char_of_digit = fn : int -> char\
val print_int = fn : int -> unit\
val print_char = fn : char -> unit\
val list_is_nil = fn : 'a list -> bool\
val list_is_cons = fn : 'a list -> bool\
val list_unnil = fn : 'a list -> unit\
val list_uncons = fn : 'a list -> 'a * 'a list\
val optn_is_none = fn : 'a optn -> bool\
val optn_is_some = fn : 'a optn -> bool\
val optn_unnone = fn : 'a optn -> unit\
val optn_unsome = fn : 'a optn -> 'a\
val it = () : unit\
[opening ./../MySolution/assign01-02.sml]\
[opening ./../assign01-lib.sml]\
[autoloading]\
[autoloading done]\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
val it = () : unit\
[opening ./../MySolution/assign01-01.sml]\
[opening ./../assign01-lib.sml]\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
val it = () : unit\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
exception XlistConsMatch\
exception XlistSubscript\
datatype 'a xlist\
  = xlist_append of 'a xlist * 'a xlist\
  | xlist_cons of 'a * 'a xlist\
  | xlist_nil\
  | xlist_reverse of 'a xlist\
  | xlist_snoc of 'a xlist * 'a\
val list_of_xlist = fn : 'a xlist -> 'a list\
val helper = fn : 'a xlist * int -> int\
val xlist_size = fn : 'a xlist -> int\
val it = () : unit\
val xlist_subhelper = fn : 'a xlist * int -> 'a\
val xlist_sub = fn : 'a xlist * int -> 'a\
val it = () : unit\
= Assign01-02-test passed!\
val list_size = fn : 'a list -> int\
val xs = <hidden> : 'a xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs =\
  xlist_append\
    (xlist_reverse\
       (xlist_snoc\
          (xlist_cons (1,xlist_append (xlist_reverse #,xlist_reverse #)),2)),\
     xlist_reverse\
       (xlist_snoc\
          (xlist_cons (1,xlist_append (xlist_reverse #,xlist_reverse #)),2)))\
  : int xlist\
\
(base) afzalkhan@crc-dot1x-nat-10-239-64-46 Testing % sml <assign01-03-test.sml\
Standard ML of New Jersey (64-bit) v110.99.3 [built: Thu Jul 28 00:35:16 2022]\
- [opening ./../../../mysmlib/mysmlib-cls.sml]\
[autoloading]\
[library $SMLNJ-BASIS/basis.cm is stable]\
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]\
[autoloading done]\
type 'a optn = 'a option\
exception ERROR320 of string optn\
exception ConsMatch320\
exception OptnSubscript320\
exception ListSubscript320\
val assert320 = fn : bool -> unit\
val assert320_some = fn : bool * string -> unit\
val char_of_digit = fn : int -> char\
val print_int = fn : int -> unit\
val print_char = fn : char -> unit\
val list_is_nil = fn : 'a list -> bool\
val list_is_cons = fn : 'a list -> bool\
val list_unnil = fn : 'a list -> unit\
val list_uncons = fn : 'a list -> 'a * 'a list\
val optn_is_none = fn : 'a optn -> bool\
val optn_is_some = fn : 'a optn -> bool\
val optn_unnone = fn : 'a optn -> unit\
val optn_unsome = fn : 'a optn -> 'a\
val it = () : unit\
[opening ./../MySolution/assign01-03.sml]\
[opening ./../assign01-lib.sml]\
[autoloading]\
[autoloading done]\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
val it = () : unit\
[opening ./../MySolution/assign01-01.sml]\
[opening ./../assign01-lib.sml]\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
val it = () : unit\
val list_append = fn : 'a list * 'a list -> 'a list\
val list_reverse = fn : 'a list -> 'a list\
exception XlistConsMatch\
exception XlistSubscript\
datatype 'a xlist\
  = xlist_append of 'a xlist * 'a xlist\
  | xlist_cons of 'a * 'a xlist\
  | xlist_nil\
  | xlist_reverse of 'a xlist\
  | xlist_snoc of 'a xlist * 'a\
val list_of_xlist = fn : 'a xlist -> 'a list\
val helper = fn : 'a xlist * int -> int\
val xlist_size = fn : 'a xlist -> int\
val it = () : unit\
val helper = fn : 'a xlist -> 'a xlist\
val xlist_remove_reverse = fn : 'a xlist -> 'a xlist\
val it = () : unit\
= Assign01-03-test passed!\
val list_size = fn : 'a list -> int\
val nappend = fn : 'a xlist -> int\
val nreverse = fn : 'a xlist -> int\
val xs = <hidden> : 'a xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val ys = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs = <hidden> : int xlist\
val xs =\
  xlist_append\
    (xlist_reverse\
       (xlist_snoc\
          (xlist_cons (1,xlist_append (xlist_reverse #,xlist_reverse #)),2)),\
     xlist_reverse\
       (xlist_snoc\
          (xlist_cons (1,xlist_append (xlist_reverse #,xlist_reverse #)),2)))\
  : int xlist\
val ys =\
  xlist_append\
    (xlist_cons\
       (2,xlist_snoc (xlist_append (xlist_snoc (#,#),xlist_snoc (#,#)),1)),\
     xlist_cons\
       (2,xlist_snoc (xlist_append (xlist_snoc (#,#),xlist_snoc (#,#)),1)))\
  : int xlist\
\
(base) afzalkhan@crc-dot1x-nat-10-239-64-46 Testing % sml <assign01-04-test.sml\
Standard ML of New Jersey (64-bit) v110.99.3 [built: Thu Jul 28 00:35:16 2022]\
- [opening ./../MySolution/assign01-04.sml]\
[autoloading]\
[library $SMLNJ-BASIS/basis.cm is stable]\
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]\
[autoloading done]\
val ord = fn : char -> int\
val chr = fn : int -> char\
val str = fn : char -> string\
val strlen = fn : string -> int\
val strcat = fn : string * string -> string\
val strsub = fn : string * int -> char\
val exponent = fn : int * int * int -> int\
val str2int2 = fn : string * int -> int\
val str2int = fn : string -> int\
val number_checker = fn : string * int -> bool\
val check = fn : string * int -> bool\
val str2int_helper = fn : string -> int option\
val str2int_opt = fn : string -> int option\
val it = () : unit\
= Assign01-04-test passed!\
\
}